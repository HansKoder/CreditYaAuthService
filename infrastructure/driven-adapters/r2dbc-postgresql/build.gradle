
dependencies {
    implementation project(':model')
    implementation 'org.springframework:spring-context'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'jakarta.persistence:jakarta.persistence-api' // TODO: Check if it's still necessary
    implementation 'org.postgresql:r2dbc-postgresql'
    implementation 'org.reactivecommons.utils:object-mapper-api:0.1.0'
    testImplementation 'org.reactivecommons.utils:object-mapper:0.1.0'

    // ðŸ”¹ Testcontainers para integration tests
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'org.postgresql:r2dbc-postgresql'

    testImplementation platform('org.testcontainers:testcontainers-bom:1.20.1')
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:r2dbc'

    sourceSets {
        integrationTest {
            java.srcDir file('src/integrationTest/java')
            resources.srcDir file('src/integrationTest/resources')
            compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
            runtimeClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
        }
    }

    tasks.register('integrationTest', Test) {
        description = 'Runs integration tests.'
        group = 'verification'
        testClassesDirs = sourceSets.integrationTest.output.classesDirs
        classpath = sourceSets.integrationTest.runtimeClasspath
        useJUnitPlatform()

        // BlockHound JDK 13+
        jvmArgs += ["-XX:+AllowRedefinitionToAddDeleteMethods"]
    }

    configurations {
        integrationTestImplementation.extendsFrom testImplementation
        integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
    }

    tasks.withType(Copy).configureEach {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }

}

